#include <stdint.h>
#include "lwip/api.h"
#include "lwip/netif.h"

#ifndef NET_SETTINGS_H
#define NET_SETTINGS_H

typedef struct NetConnectionContext {
    struct netconn *conn;
    struct netconn *clientConn;
    struct netif netInterface;
} NetConnectionContext;

static const unsigned char SA_PRIVATE_KEY[] = { 0x30, 0x82, 0x04, 0xA3, 0x02, 0x01, 0x00, 0x02, 0x82, 0x01, 0x01, 0x00, 0xD2, 0xD0, 0x7C, 0x38, 0xBD, 0x6D, 0x79, 0xA7, 0xB9, 0x87, 0x89, 0xF7, 0xD9,
        0xDC, 0xF1, 0xA6, 0xB6, 0x01, 0xEC, 0xF3, 0xD3, 0x3B, 0xDF, 0xC1, 0x7F, 0x27, 0x04, 0x85, 0x6E, 0xB1, 0x04, 0xCB, 0x9D, 0x03, 0x3D, 0xA1, 0x8E, 0x9C, 0x45, 0x18, 0x24, 0xAE, 0x9D, 0xEB, 0x17,
        0xA1, 0x1C, 0x54, 0xD3, 0x95, 0x68, 0xA9, 0x74, 0x14, 0xC7, 0x3D, 0xB4, 0xEC, 0xC3, 0x74, 0x5C, 0x46, 0x6B, 0x6E, 0x59, 0x08, 0x38, 0x62, 0xC8, 0xFF, 0xB4, 0x39, 0xC8, 0x43, 0x61, 0x28, 0xD0,
        0xA1, 0xE4, 0x37, 0xE6, 0x11, 0xA1, 0xFD, 0xE4, 0x89, 0x46, 0xA0, 0x3D, 0x30, 0x39, 0x90, 0x29, 0x56, 0x2C, 0x47, 0xE5, 0xFA, 0xBA, 0x43, 0x2A, 0x11, 0xD8, 0x16, 0xF8, 0xF5, 0xFE, 0x62, 0x06,
        0x37, 0xBF, 0xD3, 0x33, 0xF1, 0xB9, 0x8A, 0xA7, 0x99, 0x6A, 0xFF, 0x4D, 0xAA, 0xFE, 0x8F, 0x45, 0xDC, 0x57, 0xB0, 0x62, 0x0D, 0x1E, 0x84, 0x20, 0x50, 0x64, 0xDA, 0x16, 0x5B, 0xDE, 0x59, 0xA8,
        0x11, 0xFF, 0x9E, 0x33, 0x23, 0x29, 0xD9, 0x89, 0x5F, 0x0B, 0xFF, 0x2C, 0xC6, 0x02, 0x17, 0xD1, 0x09, 0x64, 0xE1, 0x70, 0x25, 0x53, 0x51, 0xE7, 0x1C, 0xA7, 0xC1, 0x51, 0x0D, 0x7C, 0xC7, 0x82,
        0xA3, 0xC5, 0xB8, 0x96, 0xFC, 0x12, 0xEE, 0xFD, 0x19, 0xEF, 0x71, 0x63, 0x9E, 0x2E, 0x93, 0x66, 0xD7, 0x7E, 0xB4, 0x3A, 0x22, 0x54, 0xE9, 0x17, 0x89, 0xB3, 0x35, 0x5F, 0xD9, 0xCC, 0x6F, 0x51,
        0xC6, 0x77, 0xD9, 0x08, 0x5C, 0xDD, 0xE9, 0xF8, 0x20, 0x57, 0x1A, 0x89, 0xB6, 0x25, 0xDA, 0x4A, 0xCF, 0x2D, 0xBD, 0xD1, 0x78, 0x0E, 0x51, 0x58, 0x19, 0xC5, 0xDB, 0xD7, 0xDA, 0x89, 0x40, 0x09,
        0x4A, 0x99, 0x70, 0x01, 0xB0, 0xB8, 0x1C, 0xD7, 0xBF, 0x11, 0xFA, 0x30, 0xA7, 0x3D, 0x22, 0x8E, 0x2E, 0x45, 0xE7, 0x02, 0x03, 0x01, 0x00, 0x01, 0x02, 0x82, 0x01, 0x00, 0x04, 0xF9, 0xEC, 0xE4,
        0xBD, 0xFB, 0xF6, 0x92, 0x31, 0xFB, 0xF4, 0x12, 0xC8, 0xAE, 0xC1, 0x79, 0x88, 0xF4, 0x54, 0xAE, 0x90, 0xBE, 0xEA, 0x12, 0x3C, 0x39, 0x24, 0x8F, 0x2D, 0xC4, 0xB9, 0xF3, 0x40, 0x7A, 0x92, 0x1A,
        0xDD, 0x2D, 0xED, 0x27, 0x9B, 0xBE, 0x0F, 0x76, 0x3C, 0x31, 0x8E, 0x64, 0xA6, 0x35, 0xF1, 0xA9, 0x86, 0x56, 0xF3, 0x39, 0x0E, 0xAB, 0x44, 0x15, 0xDC, 0x13, 0xC1, 0x77, 0x72, 0x5C, 0x92, 0x50,
        0x2A, 0xA4, 0x76, 0x91, 0xA2, 0x9B, 0x8C, 0x90, 0x95, 0x14, 0x2D, 0x39, 0xF0, 0x91, 0x5B, 0xFC, 0x8D, 0x47, 0x7C, 0x46, 0x4E, 0x0B, 0x74, 0x60, 0x65, 0xC9, 0x65, 0xF4, 0x30, 0x86, 0x91, 0x9D,
        0x02, 0x42, 0x37, 0x92, 0x9B, 0x3F, 0xDB, 0x48, 0x5F, 0x13, 0x33, 0xD0, 0xFD, 0x79, 0xE8, 0x42, 0x50, 0xA0, 0x7B, 0x79, 0x19, 0x51, 0x3E, 0xFF, 0x0C, 0xCC, 0x1D, 0xB9, 0xBE, 0x2E, 0xC7, 0x07,
        0x12, 0x3A, 0xF4, 0x1A, 0xBA, 0x65, 0xD0, 0x26, 0x51, 0x3B, 0xF0, 0x97, 0xE6, 0xDD, 0xBA, 0x98, 0x88, 0x9C, 0xF3, 0xDD, 0x90, 0x15, 0x1F, 0x0C, 0xA0, 0x6C, 0xF5, 0x26, 0x95, 0x27, 0xBC, 0x67,
        0xC5, 0x18, 0xB5, 0x38, 0x65, 0xA8, 0xFE, 0x52, 0x91, 0x08, 0x8A, 0x50, 0x53, 0xDA, 0xE3, 0x03, 0xF7, 0x1A, 0x11, 0x35, 0x1F, 0x4F, 0xF6, 0x21, 0x2D, 0x0C, 0x4C, 0x27, 0x8A, 0x56, 0xC5, 0xF9,
        0xCD, 0x40, 0x39, 0x38, 0x7C, 0xB2, 0x46, 0xB3, 0x87, 0xAA, 0x48, 0x02, 0x43, 0x32, 0xC0, 0xE9, 0x30, 0x55, 0xE6, 0x8E, 0xDB, 0x2A, 0x1C, 0x00, 0xA3, 0x24, 0x3E, 0xBF, 0xAF, 0x8B, 0xB2, 0x43,
        0x02, 0x72, 0xC8, 0x60, 0x6A, 0x12, 0x58, 0x53, 0xB0, 0x40, 0xCC, 0xEE, 0xA8, 0x7B, 0xFE, 0xF8, 0xC7, 0xB7, 0x67, 0xF2, 0xDD, 0x24, 0x75, 0xFE, 0x3A, 0x1C, 0xF4, 0x71, 0x02, 0x81, 0x81, 0x00,
        0xEB, 0xBE, 0x20, 0x95, 0x76, 0xF9, 0xEC, 0x51, 0x77, 0x57, 0x99, 0x64, 0x05, 0x45, 0x35, 0x29, 0xE3, 0x3A, 0x97, 0x2E, 0x7E, 0xEA, 0x9B, 0x5F, 0x23, 0xED, 0x3C, 0x19, 0x74, 0x1A, 0xD9, 0xB3,
        0x48, 0x6E, 0xB5, 0xAD, 0x97, 0x7B, 0x60, 0x5A, 0x6D, 0xEA, 0x64, 0x1A, 0xCC, 0x6E, 0x1E, 0x10, 0xBD, 0x39, 0x12, 0xEC, 0x6A, 0xC9, 0x72, 0xD0, 0x08, 0xCB, 0x10, 0x83, 0x8B, 0x32, 0xDF, 0x3B,
        0x1B, 0x1A, 0xE6, 0x75, 0x03, 0x06, 0xCE, 0x1A, 0xA0, 0x13, 0xD9, 0x9E, 0x29, 0x0F, 0x7F, 0x70, 0xCC, 0x2B, 0x83, 0xAE, 0xA7, 0x88, 0x46, 0xFF, 0x65, 0xB2, 0x0A, 0x54, 0x00, 0x69, 0xDD, 0xB6,
        0x27, 0xF6, 0x6A, 0xFD, 0x1A, 0x21, 0x02, 0xB1, 0x90, 0xC8, 0x73, 0xB4, 0xA1, 0xB7, 0x8A, 0x7A, 0x4B, 0x40, 0x67, 0x3A, 0xAE, 0x5C, 0x74, 0xAA, 0xE3, 0x92, 0x46, 0x52, 0x67, 0xD6, 0x95, 0x3F,
        0x02, 0x81, 0x81, 0x00, 0xE4, 0xED, 0xFC, 0x23, 0x13, 0x92, 0xA6, 0x97, 0x19, 0xB6, 0xE6, 0x1D, 0xF3, 0x2E, 0x74, 0x19, 0x62, 0xFF, 0xFE, 0xAF, 0x24, 0xAF, 0x9A, 0x68, 0x1C, 0x42, 0xA8, 0xE9,
        0x1A, 0x4F, 0xC0, 0x60, 0x3E, 0xD3, 0xFA, 0x8F, 0x0B, 0xDE, 0x74, 0x65, 0x40, 0x91, 0xCE, 0x72, 0x3C, 0xE4, 0xD7, 0xAA, 0xCD, 0x26, 0x4F, 0x77, 0x37, 0x75, 0xAB, 0x43, 0xC5, 0x8B, 0xE3, 0x20,
        0xB5, 0x2C, 0x48, 0xC9, 0xA1, 0x0B, 0xAE, 0x90, 0xAB, 0xC1, 0xDD, 0x8A, 0x4C, 0x24, 0x0A, 0xAD, 0xAF, 0x72, 0xAE, 0x2E, 0x72, 0xA2, 0x31, 0x5E, 0x06, 0x71, 0x85, 0xF8, 0x1A, 0xC1, 0x39, 0xAF,
        0x24, 0x06, 0x03, 0x6C, 0x64, 0x45, 0x99, 0x9D, 0x44, 0x75, 0xBA, 0xDB, 0xC3, 0xE2, 0x31, 0xAB, 0xBE, 0x34, 0xB4, 0x08, 0xD6, 0xEE, 0x2C, 0x04, 0xA2, 0x27, 0xEC, 0x87, 0xE1, 0x77, 0x12, 0x80,
        0x0A, 0x03, 0xDD, 0x59, 0x02, 0x81, 0x81, 0x00, 0x96, 0xFB, 0x14, 0xB9, 0x45, 0x12, 0xB9, 0x94, 0x4F, 0x5F, 0xAE, 0x20, 0xCD, 0xF3, 0x4E, 0x22, 0x3E, 0xA2, 0x86, 0xB2, 0xC3, 0x9C, 0x13, 0xD8,
        0x32, 0x15, 0x3D, 0x39, 0x7C, 0x0F, 0xBA, 0x3F, 0xC5, 0x73, 0x0A, 0x2E, 0x5C, 0x67, 0x2B, 0x05, 0x9F, 0x81, 0xCF, 0x8D, 0x0E, 0x42, 0xB4, 0x44, 0xBA, 0x3B, 0xB4, 0x6F, 0xEF, 0xD0, 0x87, 0x14,
        0xCF, 0x9C, 0xE6, 0x3D, 0xA9, 0x47, 0xF2, 0x8A, 0x53, 0x48, 0xBE, 0x32, 0x50, 0xB6, 0xEA, 0x07, 0x49, 0x60, 0x8D, 0x2E, 0x6B, 0x53, 0xBE, 0xA6, 0x0A, 0x4D, 0x10, 0x30, 0x2A, 0xA1, 0xEF, 0xFE,
        0xA0, 0x2E, 0x0F, 0xC9, 0x4E, 0xDE, 0x7E, 0x9D, 0xAC, 0x28, 0x78, 0xCB, 0x13, 0x11, 0xF3, 0x3C, 0xAF, 0xE2, 0x81, 0xA0, 0x3D, 0x36, 0x64, 0x9D, 0x00, 0x57, 0x06, 0x06, 0x22, 0x27, 0x9A, 0x9C,
        0xDB, 0xD5, 0x11, 0xEE, 0xB3, 0x0C, 0x4E, 0x57, 0x02, 0x81, 0x80, 0x3B, 0x28, 0x00, 0x1A, 0x74, 0x49, 0x56, 0x00, 0xFF, 0xA5, 0x12, 0x8B, 0xB4, 0xB6, 0x51, 0x4B, 0xEA, 0x18, 0x2A, 0x90, 0xC9,
        0x93, 0x12, 0xFC, 0x4A, 0x29, 0x33, 0x8A, 0xA0, 0xC0, 0xF0, 0xFE, 0x2D, 0xDE, 0x0B, 0x06, 0x01, 0xD4, 0x27, 0x11, 0xAF, 0x00, 0xBE, 0x6F, 0x28, 0xAB, 0x1D, 0xCB, 0xC6, 0x1D, 0x5B, 0x35, 0x7C,
        0x40, 0x4C, 0xD4, 0x43, 0x6C, 0xE5, 0x71, 0x23, 0x3F, 0xE1, 0x43, 0x30, 0xF9, 0x5A, 0xCF, 0x89, 0x82, 0x9C, 0x23, 0xCB, 0x8F, 0x18, 0xAF, 0x4F, 0x01, 0xFC, 0x5E, 0x86, 0x42, 0xC1, 0x2D, 0x01,
        0xCF, 0x3E, 0x06, 0x21, 0xAB, 0xC2, 0xA3, 0x2E, 0x54, 0xDB, 0x77, 0x9B, 0xE5, 0x9C, 0x4F, 0x56, 0x4C, 0x71, 0xCF, 0xAE, 0x2B, 0x7A, 0x18, 0x5E, 0x1B, 0x32, 0x56, 0x82, 0x6B, 0xA3, 0x36, 0x43,
        0x4C, 0xBB, 0xC3, 0x55, 0x10, 0xB6, 0xD8, 0x1D, 0x3E, 0x68, 0x69, 0x02, 0x81, 0x80, 0x32, 0x2C, 0x88, 0xD4, 0x1C, 0x06, 0xAA, 0x2A, 0x04, 0x41, 0xB6, 0x7F, 0x0C, 0x56, 0x55, 0x45, 0x60, 0xA5,
        0xC3, 0x9E, 0x54, 0x16, 0x52, 0x21, 0x2B, 0xD1, 0x46, 0x59, 0xA2, 0x6A, 0x9F, 0x19, 0xA9, 0x9D, 0xE7, 0xF8, 0x27, 0x6E, 0x8A, 0x2E, 0x69, 0x80, 0xA8, 0xA2, 0x2C, 0x5F, 0x20, 0xCF, 0x61, 0xC0,
        0x0F, 0x6D, 0x6E, 0x14, 0x6A, 0x5D, 0xF6, 0x7F, 0x7B, 0x1C, 0xD9, 0x88, 0x1C, 0xC1, 0xA3, 0xF9, 0x4A, 0x91, 0x56, 0x02, 0x8E, 0xC5, 0x2C, 0x6C, 0xFD, 0x82, 0x1C, 0x24, 0x8C, 0x2B, 0x83, 0x72,
        0xEE, 0x18, 0xF0, 0x16, 0xA5, 0xA2, 0x38, 0xBB, 0x81, 0xEE, 0xF5, 0x0D, 0x43, 0x95, 0xBA, 0x66, 0x62, 0x6D, 0x9C, 0x71, 0x1A, 0x38, 0x50, 0xA8, 0xEB, 0x63, 0x4F, 0xC5, 0xB9, 0x42, 0x67, 0xD5,
        0x3A, 0x3D, 0x6C, 0x4E, 0xA5, 0x72, 0xFE, 0xA4, 0xC5, 0xA4, 0xAA, 0x99, 0x33, 0x90 };
static const int SA_PRIVATE_KEY_SIZE = sizeof(SA_PRIVATE_KEY);

static const unsigned char DEVICE_CERT[] = { 0x30, 0x82, 0x02, 0x9E, 0x30, 0x82, 0x01, 0x86, 0x02, 0x09, 0x00, 0xAB, 0x88, 0x45, 0xD8, 0x96, 0x05, 0xCA, 0x58, 0x30, 0x0D, 0x06, 0x09, 0x2A, 0x86, 0x48,
        0x86, 0xF7, 0x0D, 0x01, 0x01, 0x0B, 0x05, 0x00, 0x30, 0x11, 0x31, 0x0F, 0x30, 0x0D, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0C, 0x06, 0x75, 0x6E, 0x75, 0x73, 0x65, 0x64, 0x30, 0x1E, 0x17, 0x0D, 0x31,
        0x38, 0x30, 0x31, 0x30, 0x39, 0x31, 0x31, 0x34, 0x35, 0x35, 0x32, 0x5A, 0x17, 0x0D, 0x32, 0x33, 0x30, 0x31, 0x30, 0x38, 0x31, 0x31, 0x34, 0x35, 0x35, 0x32, 0x5A, 0x30, 0x11, 0x31, 0x0F, 0x30,
        0x0D, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0C, 0x06, 0x75, 0x6E, 0x75, 0x73, 0x65, 0x64, 0x30, 0x82, 0x01, 0x22, 0x30, 0x0D, 0x06, 0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x01, 0x05,
        0x00, 0x03, 0x82, 0x01, 0x0F, 0x00, 0x30, 0x82, 0x01, 0x0A, 0x02, 0x82, 0x01, 0x01, 0x00, 0xE3, 0xF7, 0x27, 0xDF, 0x91, 0x79, 0x44, 0x71, 0x45, 0x12, 0x55, 0x61, 0xE0, 0x97, 0x67, 0xDD, 0x0E,
        0x04, 0x1A, 0xB1, 0xA0, 0x87, 0xE4, 0xD7, 0x0B, 0xE2, 0x43, 0xD1, 0x78, 0x62, 0xF8, 0x7B, 0x5E, 0xF1, 0x3D, 0xA6, 0x4A, 0x34, 0xB7, 0x81, 0x8A, 0x56, 0x2D, 0x62, 0x04, 0x9C, 0x97, 0xEC, 0x27,
        0x44, 0xA0, 0x34, 0x92, 0x46, 0x25, 0xC4, 0xD6, 0xE5, 0x9F, 0xC6, 0xC0, 0x33, 0x0E, 0x8C, 0x0B, 0x77, 0x5D, 0x01, 0x5D, 0x65, 0x14, 0x84, 0x01, 0xF3, 0x80, 0xF4, 0xD7, 0xF4, 0x5F, 0x58, 0xE1,
        0x30, 0xD1, 0xA4, 0x36, 0xB2, 0x5E, 0x33, 0xB2, 0x4E, 0x0A, 0x0B, 0x60, 0x54, 0xFF, 0x9B, 0x0B, 0xFB, 0x7B, 0x91, 0xF2, 0xFA, 0xDD, 0x5E, 0xCB, 0x24, 0x21, 0x63, 0x6D, 0x9E, 0x01, 0x8D, 0xCA,
        0xEA, 0x3F, 0xD9, 0x91, 0x1C, 0x1F, 0x61, 0x4A, 0x6F, 0x53, 0xB3, 0xF9, 0x53, 0x04, 0xAD, 0xAC, 0x7D, 0x08, 0x78, 0x21, 0x20, 0xC8, 0x43, 0x96, 0xEF, 0x1E, 0x8D, 0x8B, 0xC7, 0xB3, 0x45, 0xB1,
        0xFF, 0x03, 0x5C, 0x66, 0x53, 0xF9, 0x73, 0xB0, 0xC5, 0x32, 0xDA, 0xE2, 0xD1, 0x52, 0x9D, 0xAD, 0x3C, 0x34, 0x31, 0x94, 0x79, 0xC1, 0x88, 0xB6, 0x9C, 0xA3, 0x65, 0x11, 0xB3, 0xF8, 0x42, 0x42,
        0xCD, 0x44, 0xCD, 0xE9, 0x83, 0x8D, 0x53, 0x91, 0xB6, 0xFD, 0x24, 0xD6, 0xBF, 0x8E, 0x4A, 0xCC, 0xC4, 0xD5, 0x10, 0xAE, 0x7C, 0xC3, 0x02, 0x56, 0xBC, 0x43, 0x46, 0x6F, 0x8E, 0x2C, 0xA9, 0x8C,
        0xC1, 0xC3, 0xE1, 0x1A, 0x0E, 0x9A, 0x6F, 0x52, 0xE7, 0x51, 0x83, 0xD5, 0x53, 0x20, 0x50, 0xCA, 0x68, 0x3E, 0x81, 0x2B, 0xCE, 0xF5, 0xED, 0x45, 0xA4, 0xD8, 0x6F, 0xEE, 0x5C, 0x16, 0x42, 0xC7,
        0x76, 0xEE, 0xF0, 0xE8, 0x49, 0x3B, 0xA9, 0x9F, 0xD1, 0x45, 0xEF, 0xC3, 0xB1, 0x25, 0x09, 0x02, 0x03, 0x01, 0x00, 0x01, 0x30, 0x0D, 0x06, 0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01,
        0x0B, 0x05, 0x00, 0x03, 0x82, 0x01, 0x01, 0x00, 0xBF, 0x11, 0x91, 0x28, 0x32, 0x24, 0x45, 0x51, 0xE4, 0x93, 0x4A, 0xEF, 0x1A, 0x66, 0x7E, 0x39, 0xD5, 0x26, 0x0F, 0x4F, 0x7E, 0xCE, 0xF5, 0xE2,
        0xFB, 0x7D, 0x44, 0xC8, 0x0C, 0x7B, 0x16, 0x5B, 0x9C, 0x02, 0xA9, 0xD1, 0x7E, 0x1D, 0x58, 0x79, 0x0F, 0x44, 0x15, 0x49, 0x38, 0x00, 0xD9, 0x83, 0x8F, 0x93, 0x4C, 0xB5, 0x84, 0x75, 0x3A, 0x3D,
        0x54, 0x52, 0xA0, 0xD8, 0xF8, 0x13, 0x14, 0x3F, 0x94, 0x2A, 0x0B, 0xB1, 0x85, 0xDA, 0xFD, 0x46, 0x31, 0x1A, 0xE0, 0x8A, 0x63, 0x88, 0x2A, 0x18, 0x55, 0x38, 0x96, 0x3F, 0xE6, 0x2F, 0x1A, 0x70,
        0xE0, 0xE8, 0x7A, 0x98, 0x7B, 0x84, 0x33, 0xC8, 0xD2, 0x90, 0x5F, 0x4C, 0x0D, 0xFD, 0x8D, 0x0B, 0x5A, 0xB9, 0x65, 0xDF, 0xEB, 0x67, 0x4A, 0x23, 0x91, 0x39, 0x29, 0x90, 0xB3, 0x8D, 0x57, 0x7D,
        0x50, 0x62, 0x6B, 0xE1, 0x20, 0x2A, 0xBF, 0x79, 0x0B, 0x7C, 0x57, 0x44, 0x36, 0xC9, 0x9F, 0x90, 0xEE, 0xCB, 0x94, 0xF9, 0x6F, 0x10, 0xB5, 0xED, 0xCA, 0x2F, 0x18, 0xF3, 0x3F, 0x43, 0xCC, 0x6B,
        0xA3, 0x44, 0x37, 0x7B, 0xFF, 0xA9, 0xF0, 0x19, 0xA0, 0x7D, 0x2A, 0xC4, 0x66, 0x9C, 0x06, 0x33, 0xA2, 0x61, 0x34, 0x05, 0x8F, 0xA0, 0x3C, 0x6A, 0x20, 0x2C, 0x75, 0x2F, 0xC0, 0x11, 0x61, 0x41,
        0x30, 0x3B, 0x67, 0xAB, 0x3A, 0x6F, 0x63, 0xCB, 0x19, 0x41, 0x71, 0x6F, 0xB6, 0xFF, 0xC7, 0xAF, 0x01, 0x7B, 0xD9, 0xF9, 0x01, 0x93, 0xAF, 0xE0, 0x38, 0x9F, 0xBD, 0x5D, 0x45, 0x79, 0xE0, 0xD1,
        0x65, 0x0D, 0x70, 0xC2, 0xFA, 0x50, 0xAF, 0x0C, 0xB2, 0x6A, 0xDC, 0xFF, 0x21, 0x7A, 0xDD, 0x2F, 0x9F, 0xA3, 0x2C, 0x74, 0xC0, 0x6C, 0xE0, 0x4C, 0x80, 0x47, 0x92, 0x49, 0x9F, 0xCC, 0x41, 0x6D,
        0x19, 0x55, 0x05, 0x23, 0xC3, 0x7C, 0x6C, 0xBC };
static const int DEVICE_CERT_SIZE = sizeof(DEVICE_CERT);

static const unsigned char PUBLIC_KEY[] = { 0x30, 0x82, 0x01, 0x22, 0x30, 0x0D, 0x06, 0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0F, 0x00, 0x30, 0x82,
        0x01, 0x0A, 0x02, 0x82, 0x01, 0x01, 0x00, 0xE3, 0xF7, 0x27, 0xDF, 0x91, 0x79, 0x44, 0x71, 0x45, 0x12, 0x55, 0x61, 0xE0, 0x97, 0x67, 0xDD, 0x0E, 0x04, 0x1A, 0xB1, 0xA0, 0x87, 0xE4, 0xD7, 0x0B,
        0xE2, 0x43, 0xD1, 0x78, 0x62, 0xF8, 0x7B, 0x5E, 0xF1, 0x3D, 0xA6, 0x4A, 0x34, 0xB7, 0x81, 0x8A, 0x56, 0x2D, 0x62, 0x04, 0x9C, 0x97, 0xEC, 0x27, 0x44, 0xA0, 0x34, 0x92, 0x46, 0x25, 0xC4, 0xD6,
        0xE5, 0x9F, 0xC6, 0xC0, 0x33, 0x0E, 0x8C, 0x0B, 0x77, 0x5D, 0x01, 0x5D, 0x65, 0x14, 0x84, 0x01, 0xF3, 0x80, 0xF4, 0xD7, 0xF4, 0x5F, 0x58, 0xE1, 0x30, 0xD1, 0xA4, 0x36, 0xB2, 0x5E, 0x33, 0xB2,
        0x4E, 0x0A, 0x0B, 0x60, 0x54, 0xFF, 0x9B, 0x0B, 0xFB, 0x7B, 0x91, 0xF2, 0xFA, 0xDD, 0x5E, 0xCB, 0x24, 0x21, 0x63, 0x6D, 0x9E, 0x01, 0x8D, 0xCA, 0xEA, 0x3F, 0xD9, 0x91, 0x1C, 0x1F, 0x61, 0x4A,
        0x6F, 0x53, 0xB3, 0xF9, 0x53, 0x04, 0xAD, 0xAC, 0x7D, 0x08, 0x78, 0x21, 0x20, 0xC8, 0x43, 0x96, 0xEF, 0x1E, 0x8D, 0x8B, 0xC7, 0xB3, 0x45, 0xB1, 0xFF, 0x03, 0x5C, 0x66, 0x53, 0xF9, 0x73, 0xB0,
        0xC5, 0x32, 0xDA, 0xE2, 0xD1, 0x52, 0x9D, 0xAD, 0x3C, 0x34, 0x31, 0x94, 0x79, 0xC1, 0x88, 0xB6, 0x9C, 0xA3, 0x65, 0x11, 0xB3, 0xF8, 0x42, 0x42, 0xCD, 0x44, 0xCD, 0xE9, 0x83, 0x8D, 0x53, 0x91,
        0xB6, 0xFD, 0x24, 0xD6, 0xBF, 0x8E, 0x4A, 0xCC, 0xC4, 0xD5, 0x10, 0xAE, 0x7C, 0xC3, 0x02, 0x56, 0xBC, 0x43, 0x46, 0x6F, 0x8E, 0x2C, 0xA9, 0x8C, 0xC1, 0xC3, 0xE1, 0x1A, 0x0E, 0x9A, 0x6F, 0x52,
        0xE7, 0x51, 0x83, 0xD5, 0x53, 0x20, 0x50, 0xCA, 0x68, 0x3E, 0x81, 0x2B, 0xCE, 0xF5, 0xED, 0x45, 0xA4, 0xD8, 0x6F, 0xEE, 0x5C, 0x16, 0x42, 0xC7, 0x76, 0xEE, 0xF0, 0xE8, 0x49, 0x3B, 0xA9, 0x9F,
        0xD1, 0x45, 0xEF, 0xC3, 0xB1, 0x25, 0x09, 0x02, 0x03, 0x01, 0x00, 0x01 };
static const int PUBLIC_KEY_SIZE = sizeof(PUBLIC_KEY);

static const unsigned char PRIVATE_KEY[] = { 0x30, 0x82, 0x04, 0xA4, 0x02, 0x01, 0x00, 0x02, 0x82, 0x01, 0x01, 0x00, 0xE3, 0xF7, 0x27, 0xDF, 0x91, 0x79, 0x44, 0x71, 0x45, 0x12, 0x55, 0x61, 0xE0, 0x97,
        0x67, 0xDD, 0x0E, 0x04, 0x1A, 0xB1, 0xA0, 0x87, 0xE4, 0xD7, 0x0B, 0xE2, 0x43, 0xD1, 0x78, 0x62, 0xF8, 0x7B, 0x5E, 0xF1, 0x3D, 0xA6, 0x4A, 0x34, 0xB7, 0x81, 0x8A, 0x56, 0x2D, 0x62, 0x04, 0x9C,
        0x97, 0xEC, 0x27, 0x44, 0xA0, 0x34, 0x92, 0x46, 0x25, 0xC4, 0xD6, 0xE5, 0x9F, 0xC6, 0xC0, 0x33, 0x0E, 0x8C, 0x0B, 0x77, 0x5D, 0x01, 0x5D, 0x65, 0x14, 0x84, 0x01, 0xF3, 0x80, 0xF4, 0xD7, 0xF4,
        0x5F, 0x58, 0xE1, 0x30, 0xD1, 0xA4, 0x36, 0xB2, 0x5E, 0x33, 0xB2, 0x4E, 0x0A, 0x0B, 0x60, 0x54, 0xFF, 0x9B, 0x0B, 0xFB, 0x7B, 0x91, 0xF2, 0xFA, 0xDD, 0x5E, 0xCB, 0x24, 0x21, 0x63, 0x6D, 0x9E,
        0x01, 0x8D, 0xCA, 0xEA, 0x3F, 0xD9, 0x91, 0x1C, 0x1F, 0x61, 0x4A, 0x6F, 0x53, 0xB3, 0xF9, 0x53, 0x04, 0xAD, 0xAC, 0x7D, 0x08, 0x78, 0x21, 0x20, 0xC8, 0x43, 0x96, 0xEF, 0x1E, 0x8D, 0x8B, 0xC7,
        0xB3, 0x45, 0xB1, 0xFF, 0x03, 0x5C, 0x66, 0x53, 0xF9, 0x73, 0xB0, 0xC5, 0x32, 0xDA, 0xE2, 0xD1, 0x52, 0x9D, 0xAD, 0x3C, 0x34, 0x31, 0x94, 0x79, 0xC1, 0x88, 0xB6, 0x9C, 0xA3, 0x65, 0x11, 0xB3,
        0xF8, 0x42, 0x42, 0xCD, 0x44, 0xCD, 0xE9, 0x83, 0x8D, 0x53, 0x91, 0xB6, 0xFD, 0x24, 0xD6, 0xBF, 0x8E, 0x4A, 0xCC, 0xC4, 0xD5, 0x10, 0xAE, 0x7C, 0xC3, 0x02, 0x56, 0xBC, 0x43, 0x46, 0x6F, 0x8E,
        0x2C, 0xA9, 0x8C, 0xC1, 0xC3, 0xE1, 0x1A, 0x0E, 0x9A, 0x6F, 0x52, 0xE7, 0x51, 0x83, 0xD5, 0x53, 0x20, 0x50, 0xCA, 0x68, 0x3E, 0x81, 0x2B, 0xCE, 0xF5, 0xED, 0x45, 0xA4, 0xD8, 0x6F, 0xEE, 0x5C,
        0x16, 0x42, 0xC7, 0x76, 0xEE, 0xF0, 0xE8, 0x49, 0x3B, 0xA9, 0x9F, 0xD1, 0x45, 0xEF, 0xC3, 0xB1, 0x25, 0x09, 0x02, 0x03, 0x01, 0x00, 0x01, 0x02, 0x82, 0x01, 0x01, 0x00, 0x8D, 0x6A, 0x52, 0x0A,
        0xE7, 0x84, 0x91, 0xC7, 0xAE, 0x70, 0x7C, 0x14, 0xF6, 0xAD, 0x15, 0xDA, 0x54, 0x8A, 0x89, 0x40, 0xAD, 0x73, 0xFF, 0xAA, 0xC3, 0x8D, 0x7E, 0x42, 0xA0, 0x6A, 0xCC, 0xF8, 0x43, 0x62, 0x65, 0xBB,
        0x15, 0x87, 0x74, 0x5A, 0xE0, 0xC5, 0x2A, 0xEC, 0x06, 0x2E, 0x5A, 0x34, 0x3D, 0xFB, 0xDD, 0x62, 0x1F, 0x67, 0x72, 0xA0, 0x94, 0x2A, 0xE8, 0x1D, 0xF4, 0x36, 0xF8, 0x0C, 0x3A, 0x44, 0xB6, 0xA6,
        0x55, 0x18, 0x92, 0x4C, 0x7D, 0xA5, 0x5F, 0xD7, 0x03, 0x6C, 0x6E, 0x05, 0x85, 0xD4, 0xB2, 0x08, 0x2B, 0x82, 0x24, 0xDB, 0xEE, 0xFD, 0x68, 0x4F, 0xBC, 0x57, 0x9E, 0x24, 0xC1, 0x9F, 0x24, 0xFD,
        0xD9, 0xFC, 0x73, 0x7D, 0x0D, 0x89, 0x81, 0x48, 0xDB, 0xC4, 0x4B, 0xF4, 0x78, 0xEF, 0x2D, 0xE2, 0xBA, 0x98, 0xF6, 0x82, 0x75, 0x19, 0x70, 0x94, 0x51, 0xD3, 0x85, 0x2F, 0x47, 0xF4, 0x7E, 0xFB,
        0x5B, 0xFB, 0xDA, 0x0D, 0xB5, 0x9B, 0x86, 0x5A, 0xE9, 0x3B, 0x2C, 0x42, 0x64, 0x14, 0x48, 0x5E, 0x7D, 0x84, 0x11, 0x5C, 0x95, 0x2A, 0x2D, 0xB1, 0x0A, 0xF6, 0xE0, 0x86, 0xF7, 0x15, 0xE7, 0x66,
        0x28, 0x15, 0x96, 0x2B, 0x1C, 0x8D, 0xEE, 0x1B, 0xF5, 0x6A, 0xBD, 0x90, 0x05, 0xC7, 0x4A, 0x77, 0x39, 0x03, 0xF6, 0x0D, 0xA8, 0x0F, 0x9E, 0x47, 0x9F, 0xBB, 0x6A, 0xA2, 0xD8, 0x27, 0x38, 0xD5,
        0x0C, 0xE5, 0x5D, 0x53, 0x23, 0xC8, 0xC0, 0xF0, 0xC3, 0x35, 0x55, 0xFD, 0x5C, 0x83, 0x43, 0x93, 0x9B, 0xB4, 0x3C, 0xA2, 0x50, 0x95, 0xE5, 0xFA, 0xAA, 0xC0, 0x5A, 0xA0, 0xE0, 0xC7, 0x8A, 0x19,
        0xB6, 0x26, 0xD9, 0x4A, 0x55, 0xDA, 0xF4, 0xF6, 0xBA, 0x91, 0xAA, 0xA7, 0x03, 0x7D, 0x03, 0x36, 0x27, 0x96, 0xC1, 0x87, 0x3B, 0x49, 0x0D, 0xEC, 0x4D, 0x6C, 0x59, 0x3D, 0x02, 0x81, 0x81, 0x00,
        0xF4, 0xDF, 0x8A, 0xFB, 0x61, 0x05, 0x87, 0x5F, 0xA2, 0x23, 0xCF, 0x1B, 0x3A, 0x7C, 0x80, 0x0D, 0x0C, 0x9D, 0x0A, 0xAD, 0x6A, 0x7C, 0x10, 0x3F, 0x74, 0x65, 0x3C, 0xDF, 0x6F, 0x8E, 0x81, 0x1A,
        0xA9, 0xE0, 0x86, 0x2C, 0x2B, 0x14, 0xBB, 0xC8, 0x6B, 0x79, 0x9A, 0x04, 0x4A, 0xF4, 0x90, 0x6D, 0xD9, 0xD9, 0x35, 0x47, 0xE6, 0x5F, 0x23, 0x0B, 0xE2, 0x0E, 0x36, 0xA8, 0x4C, 0x17, 0xF1, 0x49,
        0x48, 0x54, 0x93, 0xED, 0x6C, 0xAE, 0xB6, 0x29, 0xED, 0x88, 0xDD, 0x40, 0xB0, 0x1C, 0xDA, 0x31, 0x9C, 0x2A, 0x2B, 0x90, 0x43, 0xFB, 0xD8, 0x79, 0xF1, 0x69, 0xC6, 0xB6, 0x5A, 0x66, 0x92, 0xEC,
        0x71, 0xCB, 0xF6, 0xAF, 0xEA, 0x8A, 0x94, 0xF3, 0xA0, 0xA6, 0x4D, 0xDF, 0x87, 0x2A, 0x48, 0x60, 0x03, 0x9B, 0xC6, 0x15, 0x1E, 0x56, 0xD8, 0xA9, 0xFE, 0x14, 0x25, 0xED, 0x42, 0x6E, 0x7E, 0xA3,
        0x02, 0x81, 0x81, 0x00, 0xEE, 0x52, 0xEF, 0x77, 0xDB, 0xA2, 0x97, 0x9E, 0xC9, 0x7B, 0x92, 0xB5, 0x09, 0x23, 0x1E, 0x07, 0x58, 0x76, 0x43, 0x72, 0xAA, 0xA5, 0xD6, 0xC0, 0x04, 0x64, 0x05, 0xF4,
        0xBF, 0x08, 0x2F, 0x5A, 0xF4, 0x6A, 0x9B, 0x4C, 0xD3, 0xF5, 0x5E, 0xE9, 0x23, 0x09, 0xBB, 0x47, 0x46, 0xE5, 0xC5, 0xCC, 0xB8, 0x25, 0xB9, 0x00, 0x41, 0xCD, 0x2A, 0x3F, 0xD6, 0xEB, 0x2C, 0x83,
        0x71, 0x64, 0x30, 0xB1, 0x06, 0x89, 0xC0, 0x29, 0xC3, 0x71, 0x4E, 0xE7, 0x20, 0x46, 0xF5, 0x59, 0x56, 0x8C, 0x68, 0xFC, 0xF3, 0xBE, 0x33, 0x5D, 0x67, 0x2E, 0x03, 0xC6, 0xC3, 0x79, 0x95, 0x8D,
        0xDE, 0xE6, 0x4C, 0x0F, 0x6F, 0xB2, 0xD2, 0xFB, 0xBD, 0x0C, 0x3D, 0x40, 0x73, 0xBC, 0xFA, 0xAD, 0x04, 0xE4, 0x2E, 0x5C, 0xC9, 0x08, 0x2F, 0x2A, 0xBF, 0x2E, 0x01, 0x42, 0x22, 0x68, 0x57, 0xA8,
        0xD0, 0xEF, 0xE4, 0x63, 0x02, 0x81, 0x80, 0x50, 0x6D, 0x1F, 0x83, 0xC2, 0xF1, 0x02, 0xEE, 0x79, 0x1D, 0x93, 0xC7, 0x58, 0xA5, 0x4D, 0x95, 0x7B, 0xA0, 0x14, 0xC2, 0xB2, 0x67, 0xBF, 0x1A, 0x68,
        0x4B, 0x5B, 0xFB, 0xF2, 0xF2, 0xF6, 0x1A, 0x60, 0xD3, 0x3A, 0x9E, 0x45, 0x24, 0x11, 0x2D, 0x19, 0x87, 0x9D, 0xFB, 0x6C, 0xF6, 0xF8, 0x7C, 0xEC, 0x01, 0x38, 0x4B, 0xBE, 0x31, 0x5F, 0x1C, 0x67,
        0x09, 0xCE, 0x0F, 0xE6, 0xB6, 0x32, 0x6C, 0xA4, 0x52, 0x0B, 0x27, 0xFE, 0xFB, 0x3F, 0x1F, 0x74, 0x41, 0xF0, 0x91, 0x6F, 0x86, 0x7A, 0x6F, 0xB2, 0xDF, 0xF2, 0xE0, 0xF6, 0x43, 0x40, 0x6D, 0x84,
        0xC9, 0xFE, 0x17, 0x24, 0x87, 0xEE, 0x17, 0xB4, 0xA4, 0x8E, 0x08, 0x67, 0x5B, 0x4E, 0xE2, 0xD9, 0xCF, 0xE5, 0x61, 0xD6, 0x4E, 0x1F, 0xE9, 0x51, 0x26, 0x17, 0xA0, 0x16, 0x0F, 0xE6, 0x27, 0xA7,
        0x28, 0xCC, 0xF0, 0x29, 0x52, 0x8B, 0x4B, 0x02, 0x81, 0x80, 0x6D, 0x37, 0xD0, 0xCA, 0xAA, 0xFA, 0xFE, 0x65, 0x24, 0x8C, 0xDF, 0x14, 0xDC, 0x15, 0x1D, 0xE3, 0xDB, 0xE4, 0x86, 0xD0, 0x7B, 0xE7,
        0xF8, 0x5C, 0x93, 0x26, 0x8B, 0x9C, 0x38, 0x17, 0xB6, 0x2C, 0x06, 0xAA, 0xFC, 0x74, 0xDF, 0x06, 0x29, 0xF2, 0xC9, 0xBD, 0xE1, 0xF7, 0xAE, 0x44, 0x0A, 0xBB, 0xE1, 0x00, 0x58, 0xA2, 0x07, 0x85,
        0xD0, 0x80, 0xE5, 0x2B, 0x6D, 0x80, 0xE7, 0x6C, 0x34, 0xEC, 0x4B, 0xC4, 0xC1, 0x2D, 0xE2, 0x85, 0x80, 0xD5, 0x66, 0xF3, 0x5D, 0xE9, 0x0D, 0x42, 0xD7, 0xB2, 0x64, 0xB9, 0x9B, 0xAC, 0x88, 0x66,
        0x8C, 0x10, 0x80, 0xF0, 0xAD, 0x5B, 0x10, 0xF5, 0x95, 0x91, 0xD5, 0x6C, 0xAC, 0x47, 0xF5, 0xC1, 0x30, 0x28, 0xE3, 0x61, 0x8D, 0xB7, 0xD0, 0xF0, 0x09, 0x57, 0x38, 0x41, 0xE9, 0xEB, 0xBB, 0x25,
        0x88, 0x2A, 0x18, 0xBE, 0x9C, 0xBD, 0x9E, 0xD2, 0xF1, 0x65, 0x02, 0x81, 0x81, 0x00, 0xEA, 0x33, 0x26, 0xC8, 0x32, 0x26, 0x63, 0x11, 0x2D, 0xC0, 0x9C, 0x13, 0x72, 0xD3, 0x87, 0x3B, 0x2A, 0x61,
        0xA1, 0x09, 0x16, 0x24, 0x68, 0xDE, 0xCE, 0xFD, 0x4D, 0x4F, 0x08, 0x43, 0xE3, 0xD8, 0x45, 0xB6, 0xBF, 0x11, 0xF3, 0x4B, 0x45, 0x24, 0xF6, 0x62, 0x15, 0x1E, 0xC2, 0xED, 0xD6, 0xCD, 0xB6, 0xD7,
        0x17, 0x68, 0x27, 0x93, 0x30, 0xF3, 0xC9, 0x4A, 0x34, 0x79, 0xF1, 0xD3, 0xC1, 0x5C, 0xCA, 0x44, 0x5B, 0x71, 0xCE, 0xBF, 0xC1, 0xCC, 0x0B, 0x39, 0xBE, 0x33, 0x45, 0xCB, 0x46, 0x7E, 0x7D, 0x5C,
        0x15, 0xA5, 0x01, 0x00, 0x3A, 0x1A, 0xB7, 0x4B, 0x8D, 0x44, 0x88, 0xBC, 0x67, 0x45, 0x3B, 0x0A, 0x1A, 0x2A, 0x7B, 0xDF, 0x2F, 0x3B, 0x23, 0xDE, 0x15, 0x0E, 0xA0, 0xEC, 0x69, 0x60, 0x37, 0x31,
        0x30, 0x10, 0xBA, 0xC2, 0xB5, 0xFC, 0x94, 0x72, 0x1B, 0xB8, 0x38, 0xC0, 0x3A, 0x87 };
static const int PRIVATE_KEY_SIZE = sizeof(PRIVATE_KEY);

#endif // NET_SETTINGS_H
